{"version":3,"file":"static/js/419.1d351808.chunk.js","mappings":"4gBAOaA,EAAW,SAAC,GAAyB,IAAD,IAAtBC,KAAAA,OAAsB,MAAf,SAAe,EACzCC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IA2B/B,OACE,SAAC,KAAD,UACGF,GACC,SAAC,KAAD,CAAUG,GAAG,IAAIC,SAAO,KAExB,UAAC,KAAD,CAAYC,SA9BO,SAAAC,GACvBA,EAAEC,iBACF,MAA4BD,EAAEE,cAAcC,SAApCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,GAAa,WAATd,EAAmB,CACrB,IAAQe,EAASN,EAAEE,cAAcC,SAAzBG,KACRd,GACEe,EAAAA,EAAAA,IAAa,CACXD,KAAMA,EAAKE,MACXJ,MAAOA,EAAMI,MACbH,SAAUA,EAASG,QAGxB,MACChB,GACEiB,EAAAA,EAAAA,IAAU,CACRL,MAAOA,EAAMI,MACbH,SAAUA,EAASG,SAKzBR,EAAEE,cAAcQ,OACjB,EAO6CC,aAAa,KAArD,UACY,WAATpB,IACC,UAAC,KAAD,wBAEE,SAAC,KAAD,CAAaoB,aAAa,WAAWpB,KAAK,OAAOe,KAAK,aAG1D,UAAC,KAAD,qBAEE,SAAC,KAAD,CAAaK,aAAa,QAAQpB,KAAK,QAAQe,KAAK,cAEtD,UAAC,KAAD,wBAEE,SAAC,KAAD,CAAaK,aAAa,mBAAmBpB,KAAK,WAAWe,KAAK,iBAGpE,SAAC,KAAD,CAAcf,KAAK,SAAnB,0BAKT,ECxDYqB,EAAW,SAAC,GAAyB,IAAD,IAAtBrB,KAAAA,OAAsB,MAAf,SAAe,EACzCG,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAE/B,OAAO,SAAC,KAAD,UAAgBF,GAAa,SAAC,KAAD,CAAUG,GAAG,aAAaC,SAAO,KAAM,SAACR,EAAD,CAAUC,KAAMA,KAC5F,EAED,G","sources":["components/AuthForm/AuthForm.jsx","pages/UserForm.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { loginUser } from 'redux/auth/authOperations';\nimport { registerUser } from 'redux/auth/authOperations';\nimport { SectionCenter, StyledForm, StyledLabel, StyledInput, StyledButton } from 'components/Common';\nimport { selectIsLoggedin } from 'redux/selectors';\n\nexport const AuthForm = ({ type = 'signup' }) => {\n  const dispatch = useDispatch();\n  const isLoggedin = useSelector(selectIsLoggedin);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const { email, password } = e.currentTarget.elements;\n\n    if (type === 'signup') {\n      const { name } = e.currentTarget.elements;\n      dispatch(\n        registerUser({\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        })\n      );\n    } else {\n      dispatch(\n        loginUser({\n          email: email.value,\n          password: password.value,\n        })\n      );\n    }\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <SectionCenter>\n      {isLoggedin ? (\n        <Navigate to=\"/\" replace />\n      ) : (\n        <StyledForm onSubmit={handleFormSubmit} autoComplete=\"on\">\n          {type === 'signup' && (\n            <StyledLabel>\n              Username:\n              <StyledInput autoComplete=\"username\" type=\"text\" name=\"name\" />\n            </StyledLabel>\n          )}\n          <StyledLabel>\n            Email:\n            <StyledInput autoComplete=\"email\" type=\"email\" name=\"email\" />\n          </StyledLabel>\n          <StyledLabel>\n            Password:\n            <StyledInput autoComplete=\"current-password\" type=\"password\" name=\"password\" />\n          </StyledLabel>\n\n          <StyledButton type=\"submit\">Register</StyledButton>\n        </StyledForm>\n      )}\n    </SectionCenter>\n  );\n};\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedin } from 'redux/selectors';\nimport { SectionCenter } from 'components/Common/StyledComponents';\nimport { AuthForm } from 'components/AuthForm/AuthForm';\n\nexport const UserForm = ({ type = 'signup' }) => {\n  const isLoggedin = useSelector(selectIsLoggedin);\n\n  return <SectionCenter>{isLoggedin ? <Navigate to=\"/phonebook\" replace /> : <AuthForm type={type} />}</SectionCenter>;\n};\n\nexport default UserForm;\n"],"names":["AuthForm","type","dispatch","useDispatch","isLoggedin","useSelector","selectIsLoggedin","to","replace","onSubmit","e","preventDefault","currentTarget","elements","email","password","name","registerUser","value","loginUser","reset","autoComplete","UserForm"],"sourceRoot":""}